plugins {
	id "net.galacticraft.addon"
	id "net.galacticraft.tokenizer" version "1.0.0"
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${minecraft_version}-${mod_version}"
group = "io.github.addonmod"
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

compileJava {
    options.encoding = "UTF-8"
}


galacticraft {
	// Pulls the latest release version of Galacticraft from maven
	latestRelease()
	
	// Or use the latest snapshot version
	// useLatestSnapshot()
	
	// you can also specify the exact version to pull from maven
	// NOTE: Make sure the version exists, you can view all available
	// versions by running the 'listAvailableVersions' task
	// gcVersion('4.0.2.284')
}

minecraft {

    mappings channel: mappings_channel, version: mappings_version
    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': "ExampleDev",
                'Specification-Version': '1', // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': mod_version,
                'Implementation-Vendor': "ExampleDev",
                'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ')
        ])
    }
}

def infoMap = [
		mod_id: mod_id, 
		mod_name: mod_name, 
		mod_version: mod_version,
        mod_authors: mod_authors, 
        mod_description: mod_description.replace('\n', '\\n'), 
        minecraft_version: minecraft_version
]

def mcmetaMap = [mod_id: mod_id]

def javaMap = [
    	mod_id: mod_id, 
		mod_name: mod_name,
		mod_version: mod_version,
		forge_version: forge_version,
		gc_version: extensions.galacticraft.getVersion()
]

tokens {
	replaceIn("mcmod.info", infoMap)
    replaceIn("pack.mcmeta", mcmetaMap)
    replaceIn("Reference.java", javaMap)
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
